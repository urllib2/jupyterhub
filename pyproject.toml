[tool.ruff]
# Set the maximum line length to match ROS2 conventions
line-length = 100

# Enable specific rule sets appropriate for ROS2/robotics development
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings  
    "F",    # Pyflakes
    "I",    # isort (import sorting)
    "N",    # pep8-naming
    "UP",   # pyupgrade (modernize Python syntax)
    "B",    # flake8-bugbear (likely bugs)
    "A",    # flake8-builtins (builtin shadowing)
    "C4",   # flake8-comprehensions
    "PIE",  # flake8-pie (unnecessary code)
    "SIM",  # flake8-simplify
    "RET",  # flake8-return (return statements)
    "ARG",  # flake8-unused-arguments
]

# Ignore specific rules that are common in ROS2/educational code
ignore = [
    "E501",   # Line too long (handled by line-length setting)
    "N999",   # Invalid module name (ROS2 packages often have underscores)
    "N806",   # Variable in function should be lowercase (ROS2 uses camelCase sometimes)
    "ARG001", # Unused function argument (common in ROS2 callbacks)
    "ARG002", # Unused method argument (common in ROS2 class methods)
    "B008",   # Do not perform function calls in argument defaults (common in ROS2)
]

# Exclude common ROS2 directories and generated files
exclude = [
    ".bzr",
    ".direnv", 
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "install",      # ROS2 install directory
    "log",          # ROS2 log directory
    "build",        # ROS2 build directory
]

# Target Python 3.10+ (Ubuntu 24.04 default)
target-version = "py310"

[tool.ruff.format]
# Use single quotes for consistency with ROS2 style
quote-style = "single"

# Indent with 4 spaces
indent-style = "space"

[tool.ruff.lint.isort]
# Group imports appropriately for ROS2
known-first-party = ["rclpy", "rclcpp"]
known-third-party = ["numpy", "matplotlib", "cv2", "tf2_ros", "geometry_msgs", "sensor_msgs", "std_msgs"]

[tool.ruff.lint.pep8-naming]
# Allow ROS2 style class names and constants
classmethod-decorators = ["classmethod"]
staticmethod-decorators = ["staticmethod"]
