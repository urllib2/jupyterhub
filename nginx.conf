events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain text/css text/xml text/javascript
        application/json application/javascript application/xml+rss application/atom+xml;

    # WebSocket upgrade mapping
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Docker DNS resolver
    resolver 127.0.0.11 valid=10s;

    upstream jupyterhub {
        server ros2-teaching-hub:8000;
    }

    server {
        listen 80;
        server_name app.rosforge.com;

        client_max_body_size 100M;

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Main JupyterHub interface
        location / {
            proxy_pass http://jupyterhub;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 86400;
        }

        # JupyterHub API and services
        location ~ ^/(api|hub|user|services)/ {
            proxy_pass http://jupyterhub;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 86400;
        }

        # noVNC access - per user
        # URL format: /vnc/<username>/
        location ~ ^/vnc/([^/]+)/(.*)$ {
            # Extract username from URL
            set $username $1;
            set $vnc_path $2;
            
            # Check if user has valid JupyterHub session
            # This is a basic check - in production you'd want proper auth
            
            # Construct container name
            set $container_name jupyter-$username;
            
            # Proxy to the user's container noVNC service
            proxy_pass http://$container_name:6080/$vnc_path$is_args$args;
            
            # WebSocket and HTTP upgrade headers
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout settings for VNC connections
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            proxy_connect_timeout 10;
            
            # Frame options for noVNC
            proxy_hide_header X-Frame-Options;
            add_header X-Frame-Options SAMEORIGIN;
            
            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        # Fallback for testing - direct container IP access
        # Remove this in production
        location /vnc-test/ {
            proxy_pass http://172.18.0.4:6080/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            proxy_hide_header X-Frame-Options;
            add_header X-Frame-Options SAMEORIGIN;
        }
    }
}
