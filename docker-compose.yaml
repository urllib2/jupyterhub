# Multi-User JupyterHub with Docker Compose v2 - NETWORK OPTIMIZED VERSION
services:
  ros2-teaching-hub:
    build:
      context: .
      dockerfile: docker/Dockerfile
    image: ros2-teaching-multiuser:latest
    container_name: ros2-teaching-hub
    hostname: ros2-teaching-hub
    # CRITICAL: Use HUB startup script for main container
    command: /usr/local/bin/start-hub.sh
    # Only expose internally - nginx will handle external access
    expose:
      - "8000"
      - "8081"
      - "6080"
    volumes:
      # Read-only shared course materials for all students
      - type: bind
        source: ./student_notebooks
        target: /srv/shared_workspace
        read_only: true
      # Directory for individual student workspaces
      - type: bind
        source: ./student_workspaces
        target: /srv/student_workspaces
      # Hub configuration
      - type: bind
        source: ./jupyterhub_config.py
        target: /srv/jupyterhub/jupyterhub_config.py
        read_only: true
      # CRITICAL: Docker socket for spawning USER containers
      - /var/run/docker.sock:/var/run/docker.sock
      # Hub persistent data - writable volume
      - jupyterhub_data:/srv/jupyterhub/data
      # FIXED: Writable temp directory for the hub
      - type: tmpfs
        target: /tmp
        tmpfs:
          size: 1G
    restart: unless-stopped
    environment:
      JUPYTERHUB_CRYPT_KEY: "${JUPYTERHUB_CRYPT_KEY}"
      GITHUB_CLIENT_ID: "${GITHUB_CLIENT_ID}"
      GITHUB_CLIENT_SECRET: "${GITHUB_CLIENT_SECRET}"
      OAUTH_CALLBACK_URL: "https://rosforge.com/hub/oauth_callback"
      DOCKER_HOST: "unix:///var/run/docker.sock"
      # FIXED: Add proper environment variables
      PYTHONPATH: "/opt/venv/lib/python3.12/site-packages"
      PATH: "/opt/venv/bin:/usr/local/bin:/usr/bin:/bin"
    # CRITICAL: Privileged access needed for Docker-in-Docker (spawning user containers)
    privileged: true
    # OPTIMIZED: Faster health check
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/hub/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 2
      start_period: 30s
    # OPTIMIZED: Resource limits for better performance
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    networks:
      - ros2-network

  # NGINX PROXY SERVICE - OPTIMIZED
  nginx:
    image: nginx:alpine
    container_name: ros2-teaching-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      ros2-teaching-hub:
        condition: service_healthy
    restart: unless-stopped
    # OPTIMIZED: Resource limits for nginx
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'
        reservations:
          memory: 64M
          cpus: '0.05'
    networks:
      - ros2-network

# OPTIMIZED NETWORK CONFIGURATION - BIG PERFORMANCE IMPROVEMENT
networks:
  ros2-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: ros2-br0
      com.docker.network.driver.mtu: 1500
      # OPTIMIZED: Faster bridge settings
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/24  # OPTIMIZED: Smaller subnet for faster IP allocation
          gateway: 172.18.0.1
          ip_range: 172.18.0.0/25  # Limit IP range to first 128 addresses

# OPTIMIZED VOLUMES CONFIGURATION
volumes:
  jupyterhub_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/jupyterhub_data
