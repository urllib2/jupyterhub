name: ros2-teaching-multiuser
services:
  ros2-teaching-hub:
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        - UBUNTU_VERSION=24.04
    image: ros2-teaching-multiuser:latest
    container_name: ros2-teaching-hub
    hostname: ros2-teaching
    
    ports:
      - "8000:8000"    # JupyterHub
      - "6080:6080"    # noVNC GUI
    
    volumes:
      # Shared content accessible to all users
      - type: bind
        source: ./shared_workspace
        target: /home/jovyan/shared_workspace
      - type: bind
        source: ./student_notebooks
        target: /home/jovyan/student_notebooks
      
      # JupyterHub configuration
      - type: bind
        source: ./jupyterhub_config.py
        target: /srv/jupyterhub/jupyterhub_config.py
        read_only: true
      
      # Updated start script for multi-user
      - type: bind
        source: ./start-services.sh
        target: /usr/local/bin/start-services.sh
        read_only: true
      
      # Docker socket for DockerSpawner (CRITICAL for multi-user)
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      
      # Persistent JupyterHub database and config
      - jupyterhub_data:/srv/jupyterhub/data
      
    # Resource limits for hub container
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    restart: unless-stopped
    user: root
    
    environment:
      # Display settings
      DISPLAY: ":1"
      VNC_RESOLUTION: "1920x1080"
      
      # ESSENTIAL CPU-only rendering for VPS
      LIBGL_ALWAYS_SOFTWARE: "1"
      MESA_GL_VERSION_OVERRIDE: "3.3"
      MESA_GLSL_VERSION_OVERRIDE: "330"
      GALLIUM_DRIVER: "llvmpipe"
      LP_NUM_THREADS: "2"
      __GL_SYNC_TO_VBLANK: "0"
      MESA_GLTHREAD: "false"
      
      # ROS2 settings
      ROS_DISTRO: "jazzy"
      ROS_DOMAIN_ID: "42"
      
      # User settings
      USER: "jovyan"
      HOME: "/home/jovyan"
      VENV_PATH: "/opt/venv"
      
      # Gazebo VPS optimization
      GZ_VERSION: "harmonic"
      OGRE_RTT_MODE: "Copy"
      
      # GUI settings for VPS
      QT_X11_NO_MITSHM: "1"
      QT_GRAPHICSSYSTEM: "native"
      
      # Runtime settings
      XDG_RUNTIME_DIR: "/tmp/runtime-jovyan"
      XDG_SESSION_TYPE: "x11"
      
      # JupyterHub hub connectivity
      JUPYTERHUB_API_URL: "http://ros2-teaching:8081/hub/api"
      JUPYTERHUB_BASE_URL: "/hub/"
      
      # OAuth Configuration (set these to your actual values)
      # For Google OAuth:
      GOOGLE_OAUTH_CLIENT_ID: "${GOOGLE_OAUTH_CLIENT_ID:-}"
      GOOGLE_OAUTH_CLIENT_SECRET: "${GOOGLE_OAUTH_CLIENT_SECRET:-}"
      
      # For GitHub OAuth:
      GITHUB_OAUTH_CLIENT_ID: "${GITHUB_OAUTH_CLIENT_ID:-}"
      GITHUB_OAUTH_CLIENT_SECRET: "${GITHUB_OAUTH_CLIENT_SECRET:-}"
      
      # OAuth callback URL for your domain
      OAUTH_CALLBACK_URL: "https://rosforge.com/hub/oauth-callback"
      
      # Docker daemon for spawner
      DOCKER_HOST: "unix:///var/run/docker.sock"
   
    command: /usr/local/bin/start-services.sh
    
    # Networks - important for DockerSpawner communication
    networks:
      - ros2-network
    
    # Minimal logging for VPS
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"
    
    # VPS-optimized healthcheck
    healthcheck:
      test: 
        - "CMD-SHELL"
        - "curl -f http://localhost:8000/hub/health || exit 1"
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 3m
      start_interval: 30s

  # Note: Using host nginx instead of containerized nginx

# Networks
networks:
  ros2-network:
    driver: bridge
    name: ros2-teaching_ros2-network

# Volumes
volumes:
  jupyterhub_data:
    driver: local
    name: jupyterhub-data
